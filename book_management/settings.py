"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 5.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from datetime import timedelta

import mongoengine
from environ import Env, Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
ROOT_DIR = Path(__file__) - 2

# Cargar variables de entorno desde el archivo .env
env = Env(
    ENV_FILE=(str, ROOT_DIR(".env")),
    MONGO_USERNAME=(str, "username"),
    MONGO_PASSWORD=(str, "password"),
    MONGO_DB=(str, "db"),
    MONGO_HOST=(str, "localhost"),
    DJANGO_SECRET_KEY=(str, "DJANGO_SECRET_KEY"),
    DJANGO_STATIC_URL=(str, "static/"),
)

# Leer las variables de entorno desde el archivo .env
env.read_env(env("ENV_FILE"))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env("DJANGO_SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

DJANGO_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django_mongoengine",
    "django_mongoengine.mongo_auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "apps.users",
    "apps.books",
]

THIRD_PARTY_APPS = [
    "corsheaders",
    "rest_framework",
    "rest_framework_mongoengine",
]


INSTALLED_APPS = DJANGO_APPS + THIRD_PARTY_APPS

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "book_management.logger.logging_middleware",
]

ROOT_URLCONF = "book_management.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "book_management.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = env.str("DJANGO_STATIC_URL")

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# -----------------------------------------------
# Configuración de base de datos (MongoDB)
# -----------------------------------------------

# Configuración para conectar MongoDB usando mongoengine
mongoengine.connect(
    db=env("MONGO_DB"),
    host=f"mongodb+srv://{env('MONGO_HOST')}/",
    username=env("MONGO_USERNAME"),
    password=env("MONGO_PASSWORD"),
)

MONGODB_DATABASES = {"default": {"name": "book_management"}}

DATABASES = {"default": {"ENGINE": "django.db.backends.dummy"}}

MONGOENGINE_USER_DOCUMENT = "apps.users.models.CustomUser"

# ---------------------------------------------
# Configuración de sesiones con MongoDB
# ---------------------------------------------
SESSION_ENGINE = "django_mongoengine.sessions"

# --------------------------------------------------------
# Configuración de Autenticación y Permisos
# --------------------------------------------------------

AUTHENTICATION_BACKENDS = [
    "django.contrib.auth.backends.ModelBackend",
    # BAcjend personalizado login email
    "book_management.authentication.CustomAuthBackend",
]

# ---------------------------------------------
# Configuración de Django REST Framework
# ---------------------------------------------

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": [
        # Autenticación JWT
        "rest_framework_simplejwt_mongoengine.authentication.JWTAuthentication",
    ],
    "DEFAULT_PERMISSION_CLASSES": [
        # Autenticación para todas las vistas
        "rest_framework.permissions.IsAuthenticated",
    ],
}
# ---------------------------------------------
# Configuración de Simple JWT MongoEngine
# ---------------------------------------------

SIMPLE_JWT_MONGOENGINE = {"ACCESS_TOKEN_LIFETIME": timedelta(minutes=10)}
